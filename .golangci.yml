run:
  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 1m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

# all available settings of specific linters
linters:
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    # - exhaustivestruct
    - exportloopref
    - funlen
    - gci
    - gochecknoinits
    # - gochecknoglobals
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godox
    - goerr113
    - gofmt
    - goimports
    # - golint --> revive
    - revive
    # - gomnd (delayed)
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    # - interfacer --> (deprecated)
    - lll
    # - maligned --> govet:fieldalignment
    - megacheck
    - misspell
    - nakedret
    # - nestif (delayed)
    - nlreturn
    - prealloc
    - nilerr
    - nolintlint
    - rowserrcheck
    # - scopelint --> exportloopref
    - exportloopref
    - staticcheck
    - structcheck
    - stylecheck
    # - testpackage: Too late for that
    - typecheck
    - unconvert
    - unparam
    - unused
    - varcheck
    - whitespace
    - wrapcheck
    - wsl
  fast: false

linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false

  funlen:
    lines: 80
    statements: 40

  govet:
    # report about shadowed variables
    check-shadowing: true

    # settings per analyzer
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

    # enable or disable analyzers by name
    enable:
      - atomicalign
    #  - fieldalignment
    enable-all: false
    disable:
      - shadow
    disable-all: false
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/fclairamb/ftpserverlib
  gocyclo:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 15
  gocognit:
    # minimal code complexity to report, 30 by default (but we recommend 10-20)
    min-complexity: 30
  maligned:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  dupl:
    # tokens count to trigger issue, 150 by default
    threshold: 100
  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3
  depguard:
    list-type: blacklist
    include-go-root: false
    packages:
      - github.com/sirupsen/logrus
    packages-with-error-messages:
      # specify an error message to output when a blacklisted package is used
      github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"
  misspell:
    locale: US
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 120
    # tab width in spaces. Default to 1.
    tab-width: 1
  wsl:
    allow-cuddle-declarations: true

issues:
  exclude-rules:
    - path: _test\.go$
      linters:
        - wrapcheck
        - gochecknoglobals

